services:
- docker
env:
  global:
  - CI_BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  - CI_REGISTRY_IMAGE=$DOCKER_IMAGE
before_script:
- export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH | sed -e 's/[\/]/-/g' | sed -e 's/[\#]//g'; fi`
- export DEV_CONTAINER_IMAGE=$CI_REGISTRY_IMAGE:dev_$TAG
- export PROD_CONTAINER_IMAGE=$CI_REGISTRY_IMAGE:$TAG
- cp .env.example .env
- chmod +x setup.sh
- ./setup.sh
script:
- docker build -f Dockerfile-dev -q --build-arg CI_BUILD_ID=$TRAVIS_BUILD_ID --build-arg
  CI_BUILD_REF=$TRAVIS_COMMIT --build-arg CI_BUILD_REF_NAME=$TRAVIS_BRANCH --build-arg
  CI_BUILD_TIME=$CI_BUILD_TIME --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE --build-arg
  CI_PROJECT_NAME=$TRAVIS_REPO_SLUG --pull -t $DEV_CONTAINER_IMAGE .
# run and check the dev container
- docker tag $DEV_CONTAINER_IMAGE app:ci
- docker run --name app_ci -v $(pwd):/opt/app -p 4200:4200 -d app:ci npm run start
- docker exec app_ci npm run lint
- docker exec app_ci ng test --browsers Chrome_no_sandbox -w false
- docker exec app_ci npm run e2e
# build, run and check the prod image
- sudo rm -rf .com.google.Chrome*
- docker exec app_ci ng build --prod
- docker build -q --build-arg CI_BUILD_ID=$TRAVIS_BUILD_ID --build-arg
  CI_BUILD_REF=$TRAVIS_COMMIT --build-arg CI_BUILD_REF_NAME=$TRAVIS_BRANCH --build-arg
  CI_BUILD_TIME=$CI_BUILD_TIME --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE --build-arg
  CI_PROJECT_NAME=$TRAVIS_REPO_SLUG --pull -t $PROD_CONTAINER_IMAGE .
after_success:
- docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD
- docker push $DEV_CONTAINER_IMAGE
- docker push $PROD_CONTAINER_IMAGE
